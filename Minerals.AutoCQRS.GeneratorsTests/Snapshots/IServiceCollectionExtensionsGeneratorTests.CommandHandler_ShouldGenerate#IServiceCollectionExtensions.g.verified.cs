//HintName: IServiceCollectionExtensions.g.cs
// <auto-generated>
// This code was generated by a tool.
// Name: Minerals.AutoCQRS.Generators
// Version: {Removed}
// </auto-generated>
namespace Minerals.AutoCQRS
{
    using global::Microsoft.Extensions.DependencyInjection.Extensions;
    using global::Microsoft.Extensions.DependencyInjection;
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public static class IServiceCollectionExtensions
    {
        public static global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddAutoCQRSHandlers(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection collection, global::System.Action<global::Microsoft.Extensions.DependencyInjection.IServiceCollection, global::System.Type, global::System.Type> injectPolicy = null)
        {
            if (injectPolicy is null)
            {
                injectPolicy = DefaultInjectPolicy;
            }
            collection.TryAddSingleton<global::Minerals.AutoCQRS.ICommandDispatcher, global::Minerals.AutoCQRS.CommandDispatcher>();
            collection.TryAddSingleton<global::Minerals.AutoCQRS.IQueryDispatcher, global::Minerals.AutoCQRS.QueryDispatcher>();
            injectPolicy.Invoke(collection, typeof(global::Minerals.AutoCQRS.ICommandHandler<global::Examples.ExampleCommand, int>), typeof(global::Examples.ExampleCommandHandler));
            return collection;
        }

        public static global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddAutoCQRSPipelines(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection collection, global::System.Action<global::Microsoft.Extensions.DependencyInjection.IServiceCollection, global::System.Type, global::System.Type> injectPolicy = null)
        {
            if (injectPolicy is null)
            {
                injectPolicy = DefaultInjectPolicy;
            }
            collection.TryAddSingleton<global::Minerals.AutoCQRS.ICommandPipelineDispatcher, global::Minerals.AutoCQRS.CommandPipelineDispatcher>();
            collection.TryAddSingleton<global::Minerals.AutoCQRS.IQueryPipelineDispatcher, global::Minerals.AutoCQRS.QueryPipelineDispatcher>();
            return collection;
        }

        private static void DefaultInjectPolicy(global::Microsoft.Extensions.DependencyInjection.IServiceCollection collection, global::System.Type interfaceType, global::System.Type serviceType)
        {
            collection.AddSingleton(interfaceType, serviceType);
        }
    }
}